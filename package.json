{
  "name": "FalconQl",
  "version": "1.0.0",
  "main": "index.js",
  "repository": "https://github.com/zakariaharti/falconql.git",
  "author": "zakariaharti <zakariya.developer@gmail.com>",
  "description": "Isomporphic React GraphQl Boilerplate",
  "license": "MIT",
  "private": true,
  "dependencies": {
    "apollo-cache-inmemory": "^1.4.2",
    "apollo-client": "^2.4.12",
    "apollo-link": "^1.2.6",
    "apollo-link-error": "^1.1.5",
    "apollo-link-http": "^1.5.9",
    "apollo-link-state": "^0.4.2",
    "apollo-link-ws": "^1.0.12",
    "apollo-utilities": "^1.1.2",
    "body-parser": "^1.18.3",
    "chalk": "^2.4.2",
    "compression": "^1.7.3",
    "cookie-parser": "^1.4.3",
    "cors": "^2.8.5",
    "cross-fetch": "^3.0.1",
    "errorhandler": "^1.5.0",
    "express": "^4.16.4",
    "express-session": "^1.15.6",
    "graphql": "^14.1.1",
    "graphql-tag": "^2.10.1",
    "helmet": "^3.15.0",
    "lodash": "^4.17.11",
    "lusca": "^1.6.1",
    "morgan": "^1.9.1",
    "ora": "^3.0.0",
    "react": "^16.8.0-alpha.1",
    "react-apollo": "^2.4.0",
    "react-dom": "^16.8.0-alpha.1",
    "react-helmet": "^5.2.0",
    "react-router-config": "^4.4.0-beta.6",
    "react-router-dom": "^4.3.1",
    "styled-components": "^4.1.3",
    "subscriptions-transport-ws": "^0.9.15",
    "webpack-hot-server-middleware": "^0.5.0"
  },
  "devDependencies": {
    "@babel/core": "^7.2.2",
    "@babel/plugin-proposal-class-properties": "^7.2.3",
    "@babel/plugin-proposal-decorators": "^7.2.3",
    "@babel/plugin-syntax-dynamic-import": "^7.2.0",
    "@babel/plugin-syntax-jsx": "^7.2.0",
    "@babel/preset-react": "^7.0.0",
    "@koa/cors": "2",
    "@types/body-parser": "^1.17.0",
    "@types/chalk": "^2.2.0",
    "@types/compression": "^0.0.36",
    "@types/compression-webpack-plugin": "^2.0.0",
    "@types/cookie-parser": "^1.4.1",
    "@types/cors": "^2.8.4",
    "@types/dotenv": "^6.1.0",
    "@types/errorhandler": "^0.0.32",
    "@types/express": "^4.16.1",
    "@types/express-session": "^1.15.11",
    "@types/graphql": "^14.0.5",
    "@types/helmet": "^0.0.42",
    "@types/html-webpack-plugin": "^3.2.0",
    "@types/koa-router": "^7.0.38",
    "@types/koa-send": "^4.1.1",
    "@types/koa-webpack": "^5.0.1",
    "@types/koa__cors": "^2.2.3",
    "@types/lodash": "^4.14.120",
    "@types/lusca": "^1.5.0",
    "@types/mini-css-extract-plugin": "^0.2.0",
    "@types/morgan": "^1.7.35",
    "@types/node": "^10.12.18",
    "@types/ora": "^3.0.0",
    "@types/react": "^16.7.20",
    "@types/react-dom": "^16.0.11",
    "@types/react-helmet": "^5.0.8",
    "@types/react-router-config": "^1.1.0",
    "@types/react-router-dom": "^4.3.1",
    "@types/styled-components": "^4.1.6",
    "@types/webpack": "^4.4.23",
    "@types/webpack-merge": "^4.1.3",
    "@types/webpack-node-externals": "^1.6.3",
    "awesome-typescript-loader": "^5.2.1",
    "babel-loader": "^8.0.5",
    "babel-plugin-styled-components": "^1.10.0",
    "chunk-manifest-webpack-plugin": "^1.1.2",
    "compression-webpack-plugin": "^2.0.0",
    "cross-env": "^5.2.0",
    "css-hot-loader": "^1.4.3",
    "css-loader": "^2.1.0",
    "cssnano": "^4.1.8",
    "dotenv": "^6.2.0",
    "file-loader": "^3.0.1",
    "html-webpack-plugin": "^3.2.0",
    "koa2-history-api-fallback": "^0.0.5",
    "less": "^3.9.0",
    "less-loader": "^4.1.0",
    "mini-css-extract-plugin": "^0.5.0",
    "node-sass": "^4.11.0",
    "nodemon": "^1.18.9",
    "postcss-loader": "^3.0.0",
    "postcss-preset-env": "^6.5.0",
    "react-hot-loader": "^4.6.3",
    "resolve-url-loader": "^3.0.0",
    "rimraf": "^2.6.3",
    "sass-loader": "^7.1.0",
    "ts-loader": "^5.3.3",
    "ts-node": "^8.0.2",
    "typescript": "^3.2.4",
    "webpack": "^4.29.0",
    "webpack-cli": "^3.2.1",
    "webpack-dev-middleware": "^3.5.1",
    "webpack-dev-server": "^3.1.14",
    "webpack-hot-middleware": "^2.24.3",
    "webpack-manifest-plugin": "^2.0.4",
    "webpack-merge": "^4.2.1",
    "webpack-node-externals": "^1.7.2"
  },
  "scripts": {
    "test": "cross-env NODE_ENV=test PORT=8080 jest",
    "test:watch": "npm run test --watchAll",
    "test:coverage": "npm run test --coverage",
    "start": "cross-env NODE_ENV=development nodemon index.ts",
    "start:prod": "cross-env NODE_ENV=production ts-node index.ts",
    "bs": "npm run clean && npm run build && npm run build:server && npm run start:prod",
    "lint": "tslint -e node_modules",
    "clean": "rimraf build",
    "build": "cross-env NODE_ENV=production webpack --config webpack/client.js",
    "build:server": "cross-env NODE_ENV=production webpack --config webpack/server.js"
  }
}
